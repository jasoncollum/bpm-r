{"version":3,"sources":["contexts/bpm.context.js","components/header/header.component.jsx","components/loader/loader.component.jsx","components/branding/branding.component.jsx","pages/homepage/homepage.component.jsx","components/entries/entries.component.jsx","components/days/days.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/error-message/error-message.component.jsx","firebase/firebase.utils.js","components/new-entry-form/new-entry-form.component.jsx","components/edit-form-input/edit-form-input.component.jsx","components/edit-entry-form/edit-entry-form.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","App.js","index.js"],"names":["BpmContext","createContext","undefined","Header","currentUser","useContext","className","to","pathname","state","days","loaderContainerVariants","start","transition","staggerChildren","end","loaderCircleVariants","y","loaderCircleTransition","duration","yoyo","Infinity","ease","Loader","div","variants","initial","animate","span","Branding","HomePage","signUserOut","isLoading","displayName","onClick","Entries","entries","length","Table","map","entry","Fragment","key","id","moment","date","format","systolic","diastolic","pulse","weight","colSpan","notes","Days","useState","prevDays","setPrevDays","numDays","setNumDays","filteredEntries","setFilteredEntries","dateFromToday","setDateFromToday","history","useHistory","useEffect","push","a","subtract","result","getDateFromToday","filter","isSameOrAfter","sysAvg","Math","round","reduce","accumulator","parseInt","getSysAverage","diaAvg","getDiaAverage","h5","opacity","h4","FormInput","handleChange","label","otherProps","onChange","value","CustomButton","children","ErrorMessage","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","exists","email","createdAt","Date","set","console","log","auth","initialState","userId","reducer","action","type","NewEntryForm","fetchEntries","useReducer","dispatch","hasError","setHasError","handleSubmit","e","preventDefault","collection","add","target","name","toUpperCase","onSubmit","required","placeholder","rows","EditFormInput","EditEntryForm","setMessage","entryRef","handleDelete","delete","Button","password","SignIn","signInWithEmailAndPassword","code","confirmPassword","SignUp","createUserWithEmailAndPassword","user","App","setCurrentUser","setEntries","setIsLoading","onAuthStateChanged","snapShot","data","signOut","where","orderBy","snapshot","docs","Provider","exact","path","render","props","location","find","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a9e7a8c6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst BpmContext = createContext(undefined);\n\nexport default BpmContext;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport BpmContext from '../../contexts/bpm.context';\n\nimport './header.styles.scss';\n\nconst Header = () => {\n    const currentUser = useContext(BpmContext);\n    return (\n        <div className='header'>\n            <div className='options'>\n                <Link className='option' to='/'>\n                    <span className='far fa-heart heart-outline'></span>\n                </Link>\n                <Link className='option' to='/entries'>ENTRIES</Link>\n                <Link className='option'\n                    to={{ pathname: '/days', state: { days: 7 } }}>7 DAYS</Link>\n                <Link className='option'\n                    to={{ pathname: '/days', state: { days: 30 } }}>30 DAYS</Link>\n                {currentUser ? (\n                    <Link className='option' to='/newentryform'>\n                        <span className='fas fa-plus' ></span>\n                    </Link>\n                ) : (\n                        <Link className='option' to='/signin'>SIGN IN</Link>\n                    )\n                }\n            </div>\n        </div >\n    )\n};\n\nexport default Header;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nimport './loader.styles.css';\n\nconst loaderContainerVariants = {\n    start: {\n        transition: {\n            staggerChildren: 0.1\n        }\n    },\n    end: {\n        transition: {\n            staggerChildren: 0.1\n        }\n    }\n}\n\nconst loaderCircleVariants = {\n    start: {\n        y: '0%'\n    },\n    end: {\n        y: '100%'\n    }\n}\n\nconst loaderCircleTransition = {\n    duration: 0.4,\n    yoyo: Infinity,\n    ease: 'easeInOut'\n}\n\nconst Loader = () => {\n    return (\n        <motion.div\n            className='loader-container'\n            variants={loaderContainerVariants}\n            initial='start'\n            animate='end'\n        >\n            <motion.span\n                className='loader-circle'\n                variants={loaderCircleVariants}\n                transition={loaderCircleTransition}\n            />\n            <motion.span\n                className='loader-circle'\n                variants={loaderCircleVariants}\n                transition={loaderCircleTransition}\n            />\n            <motion.span\n                className='loader-circle'\n                variants={loaderCircleVariants}\n                transition={loaderCircleTransition}\n            />\n        </motion.div>\n    )\n}\n\nexport default Loader;","import React from 'react';\n\nimport './branding.styles.scss';\n\nconst Branding = () => (\n    <div className=\"branding-container\">\n        <h1 className='branding-bpm'>bpm</h1>\n        <div className='icon-div'>\n            <i className='fas fa-heart heart icon'></i>\n            <i className='fas fa-heartbeat heartbeat icon'></i>\n            <i className='fas fa-weight weight icon'></i>\n            <i className='fas fa-sticky-note note icon'></i>\n        </div>\n    </div>\n);\n\nexport default Branding;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport BpmContext from '../../contexts/bpm.context';\n\nimport Loader from '../../components/loader/loader.component';\nimport Branding from '../../components/branding/branding.component';\n\nimport './homepage.styles.scss';\n\nconst HomePage = ({ signUserOut, isLoading }) => {\n    const { currentUser } = useContext(BpmContext);\n\n    if (!isLoading) {\n        return (\n            <div className='homepage'>\n                <Branding />\n                <p className='tag-line'>monitor your blood pressure</p>\n                {currentUser ? (\n                    <>\n                        <h3 className='homepage-greeting'>Hello, {currentUser.displayName}</h3>\n                        <span className='homepage-option'\n                            onClick={() => signUserOut()}>\n                            SIGN OUT\n                    </span>\n                    </>\n                ) : (\n                        <Link className='homepage-option' to='/signin'>\n                            SIGN IN\n                        </Link>\n                    )\n                }\n\n            </div>\n        )\n    } else {\n        return (\n            <div className='homepage'>\n                <Loader />\n            </div>\n        )\n    }\n};\n\nexport default HomePage;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport moment from 'moment';\nimport { motion } from 'framer-motion';\n\nimport { Table } from 'reactstrap';\n\nimport Loader from '../loader/loader.component';\n\nimport BpmContext from '../../contexts/bpm.context';\nimport './entries.styles.scss';\n\nconst Entries = ({ isLoading }) => {\n    const { entries } = useContext(BpmContext);\n\n    if (!isLoading && entries) {\n        return (\n            <motion.div className=\"entries-container\"\n                animate={{ y: -25 }} transition={{ duration: 0.5 }}\n            >\n                {!entries.length ? (\n                    <div className='no-entries-message'>\n                        <h3>You currently have no bpm entries</h3>\n                        <h3>Click the plus sign to add an entry</h3>\n                    </div>\n                ) : (\n                        <Table className='table'>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>BP</th>\n                                    <th>Pulse</th>\n                                    <th>Weight</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    entries.map(entry => (\n                                        <React.Fragment key={entry.id}>\n                                            <tr>\n                                                <td>{\n                                                    moment(entry.date).format('M/D/YYYY LT')\n                                                }</td>\n                                                <td>{entry.systolic}/{entry.diastolic}</td>\n                                                <td>{entry.pulse}</td>\n                                                <td>{entry.weight}</td>\n                                                <td>\n                                                    <Link className='icon-btn'\n                                                        to={`/editentryform/${entry.id}`}>\n                                                        <i className='fas fa-pencil-alt pencil-icon'></i>\n                                                    </Link>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className='table-note' colSpan=\"12\">\n                                                    {entry.notes}\n                                                </td>\n                                            </tr>\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    )}\n            </motion.div>\n        )\n    } else {\n        return (\n            <div className='homepage'>\n                <Loader />\n            </div>\n        )\n    }\n}\n\nexport default Entries;","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport moment from 'moment';\nimport { motion } from 'framer-motion';\n\nimport { Table } from 'reactstrap';\n\nimport BpmContext from '../../contexts/bpm.context';\n\nimport './days.styles.scss';\n\nconst Days = ({ days }) => {\n    const { entries } = useContext(BpmContext);\n    const [prevDays, setPrevDays] = useState(days);\n    const [numDays, setNumDays] = useState(days);\n    const [filteredEntries, setFilteredEntries] = useState([]);\n    const [dateFromToday, setDateFromToday] = useState('');\n    const history = useHistory();\n\n    // Push to Entries if days is undefined\n    useEffect(() => {\n        if (!days) {\n            history.push('/entries')\n        }\n    }, [])\n\n    // Calculate date from today\n    useEffect(() => {\n        const getDateFromToday = async () => {\n            let result = await moment().subtract(numDays, 'days');\n            setDateFromToday(result);\n        }\n        getDateFromToday();\n    }, [prevDays]);\n\n    // Filter entries by date\n    useEffect(() => {\n        if (dateFromToday && entries && entries.length) {\n            setFilteredEntries(\n                entries.filter(entry => moment(entry.date).isSameOrAfter(dateFromToday))\n            )\n        }\n    }, [dateFromToday])\n\n    // Render Days component if sevenDays variable changes\n    if (days !== prevDays) {\n        setNumDays(days);\n        setPrevDays(days);\n    }\n\n    // Calculate averages\n    const getSysAverage = () => {\n        if (filteredEntries.length) {\n            const total = filteredEntries.reduce(\n                (accumulator, entry) => accumulator + parseInt(entry.systolic)\n                , 0\n            );\n            return total / filteredEntries.length;\n        }\n    }\n\n    const getDiaAverage = () => {\n        if (filteredEntries.length) {\n            const total = filteredEntries.reduce(\n                (accumulator, entry) => accumulator + parseInt(entry.diastolic)\n                , 0\n            );\n            return total / filteredEntries.length;\n        }\n    }\n\n    // Get averages results\n    const sysAvg = Math.round(getSysAverage());\n    const diaAvg = Math.round(getDiaAverage());\n\n    if (filteredEntries.length) {\n        return (\n            <motion.div className=\"days-container\"\n                animate={{ y: 10 }} transition={{ duration: 0.5 }}>\n                {\n                    (days === 7) ?\n                        <motion.h5\n                            className='bp-average-message'\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            transition={{ duration: 0.5 }}\n                        >7 Day BP Average:  {sysAvg} / {diaAvg}</motion.h5>\n                        :\n                        <motion.h5\n                            className='bp-average-message'\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            transition={{ duration: 0.5 }}\n                        >30 Day BP Average:  {sysAvg} / {diaAvg}</motion.h5>\n                }\n                <Table className='table'>\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>BP</th>\n                            <th>Pulse</th>\n                            <th>Weight</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredEntries.map(entry => (\n                                <React.Fragment key={entry.id}>\n                                    <tr>\n                                        <td>{\n                                            moment(entry.date).format('M/D/YYYY LT')\n                                        }</td>\n                                        <td>{entry.systolic}/{entry.diastolic}</td>\n                                        <td>{entry.pulse}</td>\n                                        <td>{entry.weight}</td>\n                                        <td>\n                                            <Link className='icon-btn'\n                                                to={`/editentryform/${entry.id}`}>\n                                                <i className='fas fa-pencil-alt pencil-icon'></i>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className='table-note' colSpan=\"12\">\n                                            {entry.notes}\n                                        </td>\n                                    </tr>\n                                </React.Fragment>\n                            ))\n                        }\n                    </tbody>\n                </Table>\n            </motion.div>\n        );\n    } else {\n        return (\n            <div className=\"entries-container\">\n                <div className='no-entries-message'>\n                    <motion.h4\n                        initial={{ opacity: 0 }}\n                        animate={{ y: 25, opacity: 1 }}\n                        transition={{ duration: 0.5 }}\n                    >\n                        There are no bpm entries in the last {numDays} days\n                        </motion.h4>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Days;","import React from 'react';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className='group'>\n        <input className='form-input' onChange={handleChange} {...otherProps} />\n        {\n            label ?\n                (<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>)\n                : null\n        }\n    </div>\n)\n\nexport default FormInput;","import React from 'react';\n\nimport './custom-button.styles.scss';\n\nconst CustomButton = ({ children, ...otherProps }) => (\n    <button\n        className='custom-button'\n        {...otherProps}\n    >\n        {children}\n    </button >\n);\n\nexport default CustomButton;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nimport './error-message.styles.scss';\n\nconst ErrorMessage = ({ message }) => {\n    return (\n        <motion.div\n            className='error-message'\n            initial={{ opacity: 0 }}\n            animate={{ y: 5, opacity: 1 }}\n            transition={{ duration: 0.5 }}\n        >\n            {message}\n        </motion.div>\n    )\n}\n\nexport default ErrorMessage;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBiQglNYlSQfFcpd6wgN4CFg719KLCzhe4\",\n    authDomain: \"bpm-r-979af.firebaseapp.com\",\n    databaseURL: \"https://bpm-r-979af.firebaseio.com\",\n    projectId: \"bpm-r-979af\",\n    storageBucket: \"bpm-r-979af.appspot.com\",\n    messagingSenderId: \"734170694734\",\n    appId: \"1:734170694734:web:4b67eb7007359e85c7ef1f\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('Error creating user', error.message);\n        }\n    }\n\n    // console.log(userAuth);\n    return userRef;\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import React, { useReducer, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\n\nimport BpmContext from '../../contexts/bpm.context';\nimport { firestore } from '../../firebase/firebase.utils';\n\nimport './new-entry-form.styles.scss';\n\nconst initialState = {\n    systolic: '',\n    diastolic: '',\n    pulse: '',\n    weight: '',\n    notes: '',\n    userId: ''\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"UPDATE_DATE\":\n            return { ...state, date: action.value };\n\n        case \"UPDATE_SYSTOLIC\":\n            return { ...state, systolic: action.value };\n\n        case \"UPDATE_DIASTOLIC\":\n            return { ...state, diastolic: action.value };\n\n        case \"UPDATE_PULSE\":\n            return { ...state, pulse: action.value };\n\n        case \"UPDATE_WEIGHT\":\n            return { ...state, weight: action.value };\n\n        case \"UPDATE_NOTES\":\n            return { ...state, notes: action.value };\n\n        default:\n            return state;\n    }\n}\n\nconst NewEntryForm = () => {\n    const { currentUser, fetchEntries } = useContext(BpmContext);\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [hasError, setHasError] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let date = moment().format();\n        try {\n            await firestore.collection('entries')\n                .add({\n                    ...state,\n                    userId: currentUser.id,\n                    date\n                })\n            fetchEntries();\n            history.push('/entries');\n        } catch (error) {\n            setHasError(true);\n        }\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        dispatch({ type: `UPDATE_${name.toUpperCase()}`, value })\n    }\n\n    return (\n        <div className='new-entry-form'>\n            {hasError && <ErrorMessage message='Unable to save bpm entry' />}\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='number'\n                    name='systolic'\n                    value={state.systolic}\n                    onChange={handleChange}\n                    label='systolic'\n                    required\n                />\n                <FormInput\n                    type='number'\n                    name='diastolic'\n                    value={state.diastolic}\n                    onChange={handleChange}\n                    label='diastolic'\n                    required\n                />\n                <FormInput\n                    type='number'\n                    name='pulse'\n                    value={state.pulse}\n                    onChange={handleChange}\n                    label='pulse'\n                    required\n                />\n                <FormInput\n                    type='number'\n                    name='weight'\n                    value={state.weight}\n                    onChange={handleChange}\n                    label='weight'\n                    required\n                />\n                <textarea\n                    className='entry-form-textarea'\n                    name='notes'\n                    value={state.notes}\n                    placeholder='Enter notes here...'\n                    onChange={handleChange}\n                    rows='2'\n                >\n\n                </textarea>\n                <CustomButton type='submit'> SAVE ENTRY </CustomButton>\n            </form>\n\n        </div>\n    )\n}\n\nexport default NewEntryForm;","import React from 'react';\n\nimport './edit-form-input.styles.scss';\n\nconst EditFormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className='group'>\n        <input className='edit-form-input' onChange={handleChange} {...otherProps} />\n        {\n            label ?\n                (<label className={`${otherProps.value.length ? 'shrink' : ''} edit-form-input-label`}>\n                    {label}\n                </label>)\n                : null\n        }\n    </div>\n)\n\nexport default EditFormInput;","import React, { useReducer, useContext, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport moment from 'moment';\n\nimport EditFormInput from '../edit-form-input/edit-form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\nimport { Button } from 'reactstrap';\n\nimport BpmContext from '../../contexts/bpm.context';\nimport { firestore } from '../../firebase/firebase.utils';\n\nimport '../new-entry-form/new-entry-form.styles.scss';\nimport './edit-entry-form.styles.scss';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"UPDATE_SYSTOLIC\":\n            return { ...state, systolic: action.value };\n\n        case \"UPDATE_DIASTOLIC\":\n            return { ...state, diastolic: action.value };\n\n        case \"UPDATE_PULSE\":\n            return { ...state, pulse: action.value };\n\n        case \"UPDATE_WEIGHT\":\n            return { ...state, weight: action.value };\n\n        case \"UPDATE_NOTES\":\n            return { ...state, notes: action.value };\n\n        default:\n            return state;\n    }\n}\n\nconst EditEntryForm = ({ entry }) => {\n    const { fetchEntries } = useContext(BpmContext);\n    const [state, dispatch] = useReducer(reducer, entry);\n    const [hasError, setHasError] = useState(false);\n    const [message, setMessage] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const entryRef = await firestore.collection('entries').doc(entry.id);\n\n            await firestore.collection('entries').doc(entryRef.id).set({\n                date: state.date,\n                systolic: state.systolic,\n                diastolic: state.diastolic,\n                pulse: state.pulse,\n                weight: state.weight,\n                userId: state.userId,\n                notes: state.notes\n            });\n\n            fetchEntries();\n            history.push('/entries');\n        } catch (error) {\n            setMessage('Unable to save edited entry');\n            setHasError(true);\n        }\n    }\n\n    const handleDelete = async (e) => {\n        e.preventDefault()\n\n        try {\n            const entryRef = await firestore.collection('entries').doc(entry.id);\n\n            await firestore.collection('entries').doc(entryRef.id).delete();\n\n            fetchEntries();\n            history.push('/entries');\n        } catch (error) {\n            setMessage('Unable to delete entry');\n            setHasError(true);\n        }\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        dispatch({ type: `UPDATE_${name.toUpperCase()}`, value });\n    }\n\n    return (\n        <div className='edit-entry-form-container'>\n            {hasError && <ErrorMessage message={message} />}\n            <div className=\"date-and-cancel-div\">\n                <span className='edit-entry-form-date-display'>\n                    {moment(state.date).format('M/D/YYYY LT')}\n                </span>\n                <Link to='/entries' className='edit-entry-form-cancel-icon'>\n                    <i className=\"fas fa-times\"></i>\n                </Link>\n            </div>\n            <form className='edit-entry-form' onSubmit={handleSubmit}>\n                <EditFormInput\n                    type='number'\n                    name='systolic'\n                    value={state.systolic}\n                    onChange={handleChange}\n                    label='systolic'\n                    required\n                />\n                <EditFormInput\n                    type='number'\n                    name='diastolic'\n                    value={state.diastolic}\n                    onChange={handleChange}\n                    label='diastolic'\n                    required\n                />\n                <EditFormInput\n                    type='number'\n                    name='pulse'\n                    value={state.pulse}\n                    onChange={handleChange}\n                    label='pulse'\n                    required\n                />\n                <EditFormInput\n                    type='number'\n                    name='weight'\n                    value={state.weight}\n                    onChange={handleChange}\n                    label='weight'\n                    required\n                />\n                <textarea\n                    className='edit-entry-form-textarea'\n                    name='notes'\n                    value={state.notes}\n                    placeholder='Enter notes here...'\n                    onChange={handleChange}\n                    rows='2'\n                >\n                </textarea>\n                <div className='edit-entry-form-buttons-container'>\n                    <Button\n                        className='edit-entry-form-delete-button'\n                        onClick={handleDelete}\n                    > DELETE ENTRY </Button>\n                    <CustomButton type='submit'> SAVE CHANGES </CustomButton>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default EditEntryForm;","import React, { useReducer, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\n\nimport { auth } from '../../firebase/firebase.utils';\n\nimport './sign-in.styles.scss';\n\nconst initialState = {\n    email: '',\n    password: ''\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"UPDATE_EMAIL\":\n            return { ...state, email: action.value };\n\n        case \"UPDATE_PASSWORD\":\n            return { ...state, password: action.value };\n\n        default:\n            return state;\n    }\n}\n\nconst SignIn = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [hasError, setHasError] = useState(false);\n    const [message, setMessage] = useState('');\n    const history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        try {\n            await auth.signInWithEmailAndPassword(state.email, state.password);\n            history.push('/');\n        } catch (error) {\n            if (error.code === 'auth/user-not-found') {\n                setMessage('Email address not found');\n            }\n            else if (error.code === 'auth/wrong-password') {\n                setMessage('Incorrect password');\n            }\n            else {\n                setMessage('Unable to sign in');\n            }\n            setHasError(true);\n        }\n    };\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        dispatch({ type: `UPDATE_${name.toUpperCase()}`, value });\n    }\n\n    return (\n        <div className='sign-in'>\n            {hasError && <ErrorMessage message={message} />}\n            <span>Log in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    name=\"email\"\n                    type=\"email\"\n                    value={state.email}\n                    handleChange={handleChange}\n                    label=\"email\"\n                    required />\n                <FormInput\n                    name=\"password\"\n                    type=\"password\"\n                    value={state.password}\n                    handleChange={handleChange}\n                    label=\"password\"\n                    required />\n                <div className='button'>\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                </div>\n                <Link to='/signup'><span className='sign-up-message'>Sign up for an account</span></Link>\n            </form>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useReducer, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport ErrorMessage from '../error-message/error-message.component';\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\n\nconst initialState = {\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"UPDATE_DISPLAYNAME\":\n            return { ...state, displayName: action.value };\n\n        case \"UPDATE_EMAIL\":\n            return { ...state, email: action.value };\n\n        case \"UPDATE_PASSWORD\":\n            return { ...state, password: action.value };\n\n        case \"UPDATE_CONFIRMPASSWORD\":\n            return { ...state, confirmPassword: action.value };\n\n        default:\n            return state;\n    }\n}\n\nconst SignUp = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [hasError, setHasError] = useState(false);\n    const [message, setMessage] = useState('');\n    const history = useHistory();\n\n    const { displayName } = state;\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        if (state.password !== state.confirmPassword) {\n            setMessage(\"Passwords don't match\");\n            setHasError(true);\n            return;\n        }\n\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(\n                state.email,\n                state.password\n            );\n\n            await createUserProfileDocument(user, { displayName });\n            history.push('/');\n\n        } catch (error) {\n            if (error.code === 'auth/email-already-in-use') {\n                setMessage('Email address is already being used');\n            }\n            else {\n                setMessage('Unable to sign in');\n            }\n            setHasError(true);\n        }\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        dispatch({ type: `UPDATE_${name.toUpperCase()}`, value });\n    }\n\n    return (\n        <div className='sign-up'>\n            {hasError && <ErrorMessage message={message} />}\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={state.displayName}\n                    onChange={handleChange}\n                    label='display name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={state.email}\n                    onChange={handleChange}\n                    label='email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={state.password}\n                    onChange={handleChange}\n                    label='password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={state.confirmPassword}\n                    onChange={handleChange}\n                    label='confirm password'\n                    required\n                />\n                <CustomButton type='submit'> SIGN UP </CustomButton>\n                <Link to='/signin'><p className='login-message'>\n                    Already have an account?  Sign In\n                    </p></Link>\n            </form>\n\n        </div>\n    )\n}\n\nexport default SignUp;","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Header from './components/header/header.component';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport Entries from './components/entries/entries.component';\nimport Days from './components/days/days.component';\nimport NewEntryForm from './components/new-entry-form/new-entry-form.component';\nimport EditEntryForm from './components/edit-entry-form/edit-entry-form.component';\nimport SignIn from './components/sign-in/sign-in.component';\nimport SignUp from './components/sign-up/sign-up.component';\nimport ErrorMessage from './components/error-message/error-message.component';\n\nimport { auth, createUserProfileDocument, firestore } from './firebase/firebase.utils';\n\nimport BpmContext from './contexts/bpm.context';\n\nimport './App.css';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [entries, setEntries] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  // Auth Listener\n  useEffect(() => {\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        const snapShot = await userRef.get()\n        setCurrentUser(\n          {\n            id: snapShot.id,\n            ...snapShot.data()\n          }\n        )\n      }\n    });\n  }, []);\n\n  // Get Entries\n  useEffect(() => {\n    if (currentUser) {\n      fetchEntries()\n    }\n  }, [currentUser]);\n\n  const signUserOut = () => {\n    auth.signOut();\n    setCurrentUser(null);\n  };\n\n  const fetchEntries = async () => {\n    try {\n      setIsLoading(true)\n      const snapshot = await firestore.collection('entries')\n        .where(\"userId\", \"==\", currentUser.id)\n        .orderBy(\"date\", \"desc\")\n        .get();\n\n      setEntries(snapshot.docs.map(doc => {\n        let data = doc.data()\n        return { ...data, id: doc.id }\n      }));\n      setIsLoading(false);\n    } catch (error) {\n      setHasError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\" >\n      <BpmContext.Provider value={{ currentUser, entries, fetchEntries }}>\n        <Header entries={entries} />\n        {hasError && <ErrorMessage message='Unable to fetch bpm entries' />}\n\n        <Switch>\n          <Route exact path='/'\n            render={() => <HomePage signUserOut={signUserOut} isLoading={isLoading} />}\n          />\n          <Route exact path='/entries'\n            render={() =>\n              currentUser ? (\n                <Entries isLoading={isLoading} />\n              ) : (\n                  <Redirect to='/signin' />\n                )}\n          />\n          <Route exact path='/days'\n            render={(props) =>\n              currentUser && props.location.state ? (\n                <Days days={props.location.state.days} />\n              ) : (\n                  <Redirect to='/entries' />\n                )}\n          />\n          <Route exact path='/newentryform'\n            render={() =>\n              currentUser ? (\n                <NewEntryForm />\n              ) : (\n                  <Redirect to='/signin' />\n                )}\n          />\n          <Route exact path='/editentryform/:id'\n            render={(props) => {\n              if (currentUser) {\n                let entry = entries.find(entry =>\n                  entry.id === props.match.params.id)\n                return < EditEntryForm entry={entry} />\n              } else {\n                return <Redirect to='/signin' />\n              }\n            }\n            }\n          />\n          <Route\n            exact path='/signin'\n            render={() =>\n              !currentUser ? (\n                <SignIn />\n              ) : (\n                  <Redirect to='/entries' />\n                )}\n          />\n          <Route path='/signup'\n            render={() =>\n              !currentUser ? (\n                <SignUp />\n              ) : (\n                  <Redirect to='/entries' />\n                )}\n          />\n        </Switch>\n      </BpmContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n\n"],"sourceRoot":""}